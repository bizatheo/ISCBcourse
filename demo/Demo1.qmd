--- 
title:  "Demo 1: ICU Stay after Cardiac Arrest"
output: html
---

<br>
<br>

# Introduction 

<br>

# Organising this data analysis

The demonstration is guided by three principles; **reproducibility**, **literate coding** and **standardised workflow**.

The aim is always to reduce the number of errors.  

<br>

## Reproducibility

<br>

No interactive analysis

* Data are read from the original Excel file and clean in an R script  
* Cleaned data saved in RDS format  
* Data exploration in an R script  
* Report via an rmarkdown file  

<br>

## Literate coding

<br>

* File and section headers describe the analysis    
* Consistent naming convention + descriptive names    
* use of DF to denote a data frame or tibble  
* use of the pipe  
* packages loaded together at the start  
* filenames defined together at the start  
* spaces around `=`, `+` etc.  
* alignment of calculations  

<br>

## Standardised workflow

<br>

Standard folder structure. Here is mine,
   ProjectFolder
       - data  
         - rawData    
         - rData  
       - docs  
       - R  
       - rmd  
       - temp  

<br>

Diary file

<br>

## New functions used in the demo

<br>

`glimpse()`  - summarise the contents of a data frame or tibble  
<br>
`is.na()`    - return TRUE if missing (NA) and FALSE otherwise   
<br>
`!`          - negation or NOT, turns TRUE to FALSE & FALSE to TRUE  
<br>
`!is.na()`   - return TRUE if NOT missing  
<br>
`median()`   - `sum()`, `min()`, `max()` - return median, total, minimum, maximum   
<br>
`quantile()` - return a quantile, i.e. value a proportion prob of the way through the sorted values, median(x) is the same as quantile(x, prob=0.5)    
<br>
`wilcox.text()` - Wilcoxon rank sum test, also known as the Mann-Whitney test. Non-parametric test for difference in location between 2 groups.  
<br>
`kruskal.test()` - Kruskal-Wallis nonparametric test for difference in location between 2 or more groups.  
<br>
`scale_y_log10()` - in ggplot, use a log10 scale for the y-axis. Also scale_x_log10(), scale_x_log(), scale_x_reverse() and many others  

<br>

<hr style="border:2px solid #3559A6"> </hr>

<br>

# Length of Stay in ICU

<br>

```{r eval=FALSE, message=FALSE, warning=FALSE}
#==================================================================
# File:        demo1.R
# Project:     icu (project folder C:/Projects/ISCB/icu)
# Author:      john thompson
# Date:        22 July 2022
# Description: Analysis of length of Stay in ICU 
#==================================================================
library(tidyverse)
library(readxl)
library(janitor)

excel_file <- "C:/Projects/RCourse/ISCB/data/rawData/iesu/Table 1 Enrica.xlsx"
clean_file <- "C:/Projects/Rcourse/ISCB/data/rData/cardiac.rds"

#-----------------------------------------------------------------
# Read & clean the data
#
read_excel( excel_file ) %>%
  remove_empty() %>%
  remove_constant() %>%
  clean_names( "lower_camel" ) %>%
  filter( !is.na(id) ) %>%
  saveRDS( clean_file )

#-----------------------------------------------------------------
# Read clean data
#
cardiacDF <- readRDS( clean_file )

#-----------------------------------------------------------------
# Data summary
#
cardiacDF %>%
  glimpse()

#-----------------------------------------------------------------
# Summarise ICU stay
#
cardiacDF %>%
  summarise( n       = n(),
             icuMean = mean(icuStay),
             icuStd  = sd(icuStay)) 

#-----------------------------------------------------------------
# Histogram of Days in ICU 
#
cardiacDF %>%
  ggplot( aes(x = icuStay)) +
  geom_histogram( bins = 50, fill = "steelblue" ) +
  labs( x     = "Days",
        title = "Number of days spent in ICU following a Cardiac Arrest") 

#-----------------------------------------------------------------
# Summarise ICU stay
#
cardiacDF %>%
  summarise( n         = n(),
             icuMin    = min(icuStay),
             icuQ1     = quantile(icuStay, prob=0.25),
             icuQ3     = quantile(icuStay, prob=0.75),
             icuMax    = max(icuStay) )
#-----------------------------------------------------------------
# Mortality & ICU stay
#
cardiacDF %>%
  group_by( hospDeath ) %>%
  summarise( n         = n(),
             icuMedian = median(icuStay),
             icuQ1     = quantile(icuStay, prob=0.25),
             icuQ3     = quantile(icuStay, prob=0.75)) %>%
  mutate( pct = 100 * n / sum(n) ) %>%
  select( hospDeath, n, pct, icuMedian, icuQ1, icuQ3)


#-----------------------------------------------------------------
# Days in ICU by Death in Hospital
#
cardiacDF %>%
  ggplot( aes(x = icuStay)) +
  geom_histogram( bins = 50, fill = "steelblue" ) +
  labs( x = "Days in ICU") +
  facet_grid( hospDeath ~ . ) 

#-----------------------------------------------------------------
# Wilcoxon test of Days in ICU by Death in Hospital
#
cardiacDF %>%
  wilcox.test( icuStay ~ hospDeath, data = .)

#-----------------------------------------------------------------
# CVD score & ICU stay
#
cardiacDF %>%
  mutate( cvd = chronHeartFailure + hypertension + coronArteryDis ) %>%
  group_by( hospDeath, cvd) %>%
  summarise( n         = n(),
             icuMedian = median(icuStay),
             icuQ1     = quantile(icuStay, prob=0.25),
             icuQ3     = quantile(icuStay, prob=0.75))

#-----------------------------------------------------------------
# cvd and days in ICU for survivors
#
cardiacDF %>%
  filter( hospDeath == 0 ) %>%
  mutate( cvd = chronHeartFailure + hypertension + coronArteryDis ) %>%
  ggplot( aes(x = icuStay)) +
  geom_histogram( bins = 50, fill = "steelblue" ) +
  labs( x = "Days in ICU") +
  facet_grid( cvd ~ . ) 

#-----------------------------------------------------------------
# Kruskal-Wallis test of Days in ICU for survivors
#
cardiacDF %>%
  filter( hospDeath == 0 ) %>%
  mutate( cvd = chronHeartFailure + hypertension + coronArteryDis ) %>%
  kruskal.test( icuStay ~ cvd, data = .)

#-----------------------------------------------------------------
# ICU Stay & Time to Return of Spontaneous Circulation (RoSC)
#
cardiacDF %>%
  ggplot( aes(x = timeToRoscMin, y = icuStay) ) +
  geom_point( colour = "darkgreen") +
  scale_y_log10() +
  geom_smooth( method = "lm" , colour = "black") +
  labs( x = "Time to Spontaneous Circulation (mins)",
        y = "Days in ICU") +
  facet_grid( hospDeath ~ .) 

```

<br>

## Conclusions

<br>

The main lessons from this simple analysis are,

* Patients spend an average of 8 days in ICU  
<br>
* The distribution is very skewed. Median 4 days, min 1 day, max 95 days  
<br>
* 57% of ICU patients die in hospital  
<br>
* Patients who die spend a shorter time in ICU, Median 3 days vs 7 days, p=7x10-12 (Wilcoxon Rank Sum test)  
<br>
* No evidence that more the CVD score is associated with a longer ICU stay  
<br>
* In patients who survive to discharge, a longer time to restoration of spontaneous circulation after the arrest is associated with a longer stay in ICU  

<br>

## Preparation of a Report  

<br>

An html document describing the analysis is generated by `demo1_report.rmd`. 

Steps in creating the report.  

* Open a new rmarkdown script. RStudio: File - New File - R Markdown  
* Remove the sample text and code, leave YAML header  
* Adapt the YAML  
* Add new section headers  
* Copy selected code from your R script      
* Add descriptive text  
* knit everything together  

Here is my complete R Markdown file.

````
`r paste(readLines('demo1_report.Rmd'), collapse = '\n')`
````


  